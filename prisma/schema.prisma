generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cajas_registradoras {
  id             Int           @id @default(autoincrement()) @db.UnsignedInt
  sucursal_id    Int           @db.UnsignedInt
  codigo         String        @db.VarChar(20)
  nombre         String        @db.VarChar(50)
  activo         Boolean?      @default(true)
  fecha_creacion DateTime?     @default(now()) @db.Timestamp(0)
  sucursales     sucursales    @relation(fields: [sucursal_id], references: [id], onUpdate: NoAction, map: "cajas_registradoras_ibfk_1")
  turnos_caja    turnos_caja[]

  @@unique([sucursal_id, codigo], map: "uk_sucursal_caja")
  @@index([activo], map: "idx_caja_activo")
}

model categorias {
  id                         Int                     @id @default(autoincrement()) @db.UnsignedInt
  categoria_padre_id         Int?                    @db.UnsignedInt
  codigo                     String                  @unique(map: "codigo") @db.VarChar(20)
  nombre                     String                  @db.VarChar(100)
  descripcion                String?                 @db.Text
  requiere_refrigeracion     Boolean?                @default(false)
  requiere_control_caducidad Boolean?                @default(false)
  activo                     Boolean?                @default(true)
  fecha_creacion             DateTime?               @default(now()) @db.Timestamp(0)
  categorias                 categorias?             @relation("categoriasTocategorias", fields: [categoria_padre_id], references: [id], onUpdate: NoAction, map: "categorias_ibfk_1")
  other_categorias           categorias[]            @relation("categoriasTocategorias")
  productos                  productos[]
  promociones_productos      promociones_productos[]

  @@index([activo], map: "idx_categoria_activo")
  @@index([codigo], map: "idx_categoria_codigo")
  @@index([categoria_padre_id], map: "idx_categoria_padre")
}

model clientes {
  id                  Int       @id @default(autoincrement()) @db.UnsignedInt
  codigo              String    @unique(map: "codigo") @db.VarChar(20)
  nombre              String    @db.VarChar(150)
  rfc                 String?   @db.VarChar(50)
  telefono            String?   @db.VarChar(20)
  email               String?   @db.VarChar(100)
  direccion           String?   @db.Text
  limite_credito      Decimal?  @default(0.00) @db.Decimal(12, 2)
  activo              Boolean?  @default(true)
  fecha_creacion      DateTime? @default(now()) @db.Timestamp(0)
  fecha_actualizacion DateTime? @default(now()) @db.Timestamp(0)

  @@index([activo], map: "idx_cliente_activo")
  @@index([codigo], map: "idx_cliente_codigo")
}

model compras {
  id                Int               @id @default(autoincrement()) @db.UnsignedInt
  sucursal_id       Int               @db.UnsignedInt
  proveedor_id      Int               @db.UnsignedInt
  usuario_id        Int               @db.UnsignedInt
  numero_compra     String            @db.VarChar(50)
  fecha_compra      DateTime?         @default(now()) @db.Timestamp(0)
  subtotal          Decimal           @default(0.00) @db.Decimal(12, 2)
  importe_impuestos Decimal           @default(0.00) @db.Decimal(12, 2)
  total             Decimal           @default(0.00) @db.Decimal(12, 2)
  estatus           compras_estatus?  @default(recibida)
  notas             String?           @db.Text
  sucursales        sucursales        @relation(fields: [sucursal_id], references: [id], onUpdate: NoAction, map: "compras_ibfk_1")
  proveedores       proveedores       @relation(fields: [proveedor_id], references: [id], onUpdate: NoAction, map: "compras_ibfk_2")
  usuarios          usuarios          @relation(fields: [usuario_id], references: [id], onUpdate: NoAction, map: "compras_ibfk_3")
  detalle_compras   detalle_compras[]

  @@unique([sucursal_id, numero_compra], map: "uk_sucursal_compra")
  @@index([estatus], map: "idx_compra_estatus")
  @@index([fecha_compra], map: "idx_compra_fecha")
  @@index([fecha_compra, proveedor_id, estatus], map: "idx_compras_fecha_proveedor")
  @@index([proveedor_id], map: "proveedor_id")
  @@index([usuario_id], map: "usuario_id")
}

model detalle_compras {
  id               Int               @id @default(autoincrement()) @db.UnsignedInt
  compra_id        Int               @db.UnsignedInt
  producto_id      Int               @db.UnsignedInt
  lote_id          Int?              @db.UnsignedInt
  cantidad         Decimal           @db.Decimal(10, 3)
  costo_unitario   Decimal           @db.Decimal(10, 2)
  tasa_impuesto    Decimal?          @default(16.00) @db.Decimal(5, 2)
  total_linea      Decimal           @db.Decimal(12, 2)
  compras          compras           @relation(fields: [compra_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "detalle_compras_ibfk_1")
  productos        productos         @relation(fields: [producto_id], references: [id], onUpdate: NoAction, map: "detalle_compras_ibfk_2")
  lotes_inventario lotes_inventario? @relation(fields: [lote_id], references: [id], onUpdate: NoAction, map: "detalle_compras_ibfk_3")

  @@index([compra_id], map: "idx_detalle_compra")
  @@index([producto_id], map: "idx_detalle_compra_producto")
  @@index([lote_id], map: "lote_id")
}

model detalle_ventas {
  id                   Int               @id @default(autoincrement()) @db.UnsignedInt
  venta_id             Int               @db.UnsignedInt
  producto_id          Int               @db.UnsignedInt
  lote_id              Int?              @db.UnsignedInt
  cantidad             Decimal           @db.Decimal(10, 3)
  precio_unitario      Decimal           @db.Decimal(10, 2)
  porcentaje_descuento Decimal?          @default(0.00) @db.Decimal(5, 2)
  tasa_impuesto        Decimal?          @default(16.00) @db.Decimal(5, 2)
  total_linea          Decimal           @db.Decimal(12, 2)
  ventas               ventas            @relation(fields: [venta_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "detalle_ventas_ibfk_1")
  productos            productos         @relation(fields: [producto_id], references: [id], onUpdate: NoAction, map: "detalle_ventas_ibfk_2")
  lotes_inventario     lotes_inventario? @relation(fields: [lote_id], references: [id], onUpdate: NoAction, map: "detalle_ventas_ibfk_3")

  @@index([producto_id], map: "idx_detalle_producto")
  @@index([venta_id], map: "idx_detalle_venta")
  @@index([lote_id], map: "lote_id")
}

model logs_acceso {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  usuario_id     Int       @db.UnsignedInt
  accion         String    @db.VarChar(100)
  descripcion    String?   @db.Text
  ip_address     String?   @db.VarChar(45)
  user_agent     String?   @db.Text
  fecha_creacion DateTime? @default(now()) @db.Timestamp(0)
  usuarios       usuarios  @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "logs_acceso_ibfk_1")

  @@index([accion], map: "idx_log_accion")
  @@index([fecha_creacion], map: "idx_log_fecha")
  @@index([usuario_id], map: "idx_log_usuario")
}

model lotes_inventario {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  sucursal_id            Int                      @db.UnsignedInt
  producto_id            Int                      @db.UnsignedInt
  numero_lote            String                   @db.VarChar(50)
  fecha_caducidad        DateTime?                @db.Date
  fecha_recepcion        DateTime                 @db.Date
  cantidad_inicial       Decimal                  @db.Decimal(10, 3)
  cantidad_actual        Decimal                  @db.Decimal(10, 3)
  precio_costo           Decimal                  @db.Decimal(10, 2)
  proveedor_id           Int?                     @db.UnsignedInt
  orden_compra           String?                  @db.VarChar(50)
  activo                 Boolean?                 @default(true)
  fecha_creacion         DateTime?                @default(now()) @db.Timestamp(0)
  fecha_actualizacion    DateTime?                @default(now()) @db.Timestamp(0)
  detalle_compras        detalle_compras[]
  detalle_ventas         detalle_ventas[]
  sucursales             sucursales               @relation(fields: [sucursal_id], references: [id], onUpdate: NoAction, map: "lotes_inventario_ibfk_1")
  productos              productos                @relation(fields: [producto_id], references: [id], onUpdate: NoAction, map: "lotes_inventario_ibfk_2")
  proveedores            proveedores?             @relation(fields: [proveedor_id], references: [id], onUpdate: NoAction, map: "lotes_inventario_ibfk_3")
  movimientos_inventario movimientos_inventario[]

  @@unique([sucursal_id, producto_id, numero_lote], map: "uk_sucursal_producto_lote")
  @@index([producto_id, sucursal_id, activo], map: "idx_inventario_producto_sucursal")
  @@index([fecha_caducidad], map: "idx_lote_caducidad")
  @@index([producto_id], map: "idx_lote_producto")
  @@index([sucursal_id], map: "idx_lote_sucursal")
  @@index([proveedor_id], map: "proveedor_id")
}

model metodos_pago {
  id                  Int            @id @default(autoincrement()) @db.UnsignedInt
  codigo              String         @unique(map: "codigo") @db.VarChar(20)
  nombre              String         @db.VarChar(50)
  requiere_referencia Boolean?       @default(false)
  activo              Boolean?       @default(true)
  fecha_creacion      DateTime?      @default(now()) @db.Timestamp(0)
  pagos_ventas        pagos_ventas[]
}

model movimientos_inventario {
  id               Int                                    @id @default(autoincrement()) @db.UnsignedInt
  sucursal_id      Int                                    @db.UnsignedInt
  producto_id      Int                                    @db.UnsignedInt
  lote_id          Int?                                   @db.UnsignedInt
  tipo_movimiento  movimientos_inventario_tipo_movimiento
  cantidad         Decimal                                @db.Decimal(10, 3)
  costo_unitario   Decimal?                               @default(0.00) @db.Decimal(10, 2)
  tipo_referencia  movimientos_inventario_tipo_referencia
  referencia_id    Int?                                   @db.UnsignedInt
  notas            String?                                @db.Text
  usuario_id       Int                                    @db.UnsignedInt
  fecha_movimiento DateTime?                              @default(now()) @db.Timestamp(0)
  sucursales       sucursales                             @relation(fields: [sucursal_id], references: [id], onUpdate: NoAction, map: "movimientos_inventario_ibfk_1")
  productos        productos                              @relation(fields: [producto_id], references: [id], onUpdate: NoAction, map: "movimientos_inventario_ibfk_2")
  lotes_inventario lotes_inventario?                      @relation(fields: [lote_id], references: [id], onUpdate: NoAction, map: "movimientos_inventario_ibfk_3")
  usuarios         usuarios                               @relation(fields: [usuario_id], references: [id], onUpdate: NoAction, map: "movimientos_inventario_ibfk_4")

  @@index([fecha_movimiento], map: "idx_movimiento_fecha")
  @@index([producto_id], map: "idx_movimiento_producto")
  @@index([sucursal_id], map: "idx_movimiento_sucursal")
  @@index([tipo_movimiento], map: "idx_movimiento_tipo")
  @@index([fecha_movimiento, tipo_movimiento, sucursal_id], map: "idx_movimientos_fecha_tipo")
  @@index([lote_id], map: "lote_id")
  @@index([usuario_id], map: "usuario_id")
}

model pagos_ventas {
  id                Int          @id @default(autoincrement()) @db.UnsignedInt
  venta_id          Int          @db.UnsignedInt
  metodo_pago_id    Int          @db.UnsignedInt
  importe           Decimal      @db.Decimal(12, 2)
  numero_referencia String?      @db.VarChar(100)
  fecha_pago        DateTime?    @default(now()) @db.Timestamp(0)
  ventas            ventas       @relation(fields: [venta_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pagos_ventas_ibfk_1")
  metodos_pago      metodos_pago @relation(fields: [metodo_pago_id], references: [id], onUpdate: NoAction, map: "pagos_ventas_ibfk_2")

  @@index([metodo_pago_id], map: "idx_pago_metodo")
  @@index([venta_id], map: "idx_pago_venta")
}

model productos {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  categoria_id           Int                      @db.UnsignedInt
  proveedor_id           Int?                     @db.UnsignedInt
  sku                    String                   @unique(map: "sku") @db.VarChar(50)
  codigo_barras          String?                  @db.VarChar(50)
  nombre                 String                   @db.VarChar(200)
  descripcion            String?                  @db.Text
  marca                  String?                  @db.VarChar(100)
  unidad_medida          productos_unidad_medida? @default(pieza)
  precio_venta           Decimal                  @db.Decimal(10, 2)
  precio_costo           Decimal                  @default(0.00) @db.Decimal(10, 2)
  tasa_impuesto          Decimal?                 @default(16.00) @db.Decimal(5, 2)
  stock_minimo           Decimal?                 @default(0.000) @db.Decimal(10, 3)
  stock_maximo           Decimal?                 @default(0.000) @db.Decimal(10, 3)
  requiere_control_lote  Boolean?                 @default(false)
  perecedero             Boolean?                 @default(false)
  dias_vida_util         Int?
  activo                 Boolean?                 @default(true)
  fecha_creacion         DateTime?                @default(now()) @db.Timestamp(0)
  fecha_actualizacion    DateTime?                @default(now()) @db.Timestamp(0)
  detalle_compras        detalle_compras[]
  detalle_ventas         detalle_ventas[]
  lotes_inventario       lotes_inventario[]
  movimientos_inventario movimientos_inventario[]
  categorias             categorias               @relation(fields: [categoria_id], references: [id], onUpdate: NoAction, map: "productos_ibfk_1")
  proveedores            proveedores?             @relation(fields: [proveedor_id], references: [id], onUpdate: NoAction, map: "productos_ibfk_2")
  promociones_productos  promociones_productos[]

  @@index([activo], map: "idx_producto_activo")
  @@index([categoria_id], map: "idx_producto_categoria")
  @@index([codigo_barras], map: "idx_producto_codigo_barras")
  @@index([nombre], map: "idx_producto_nombre")
  @@index([sku], map: "idx_producto_sku")
  @@index([nombre, sku, codigo_barras], map: "idx_productos_busqueda")
  @@index([proveedor_id], map: "proveedor_id")
}

model promociones {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  codigo                String                  @unique(map: "codigo") @db.VarChar(20)
  nombre                String                  @db.VarChar(100)
  descripcion           String?                 @db.Text
  tipo                  promociones_tipo
  valor_descuento       Decimal?                @default(0.00) @db.Decimal(10, 2)
  porcentaje_descuento  Decimal?                @default(0.00) @db.Decimal(5, 2)
  fecha_inicio          DateTime                @db.Date
  fecha_fin             DateTime                @db.Date
  aplica_lunes          Boolean?                @default(true)
  aplica_martes         Boolean?                @default(true)
  aplica_miercoles      Boolean?                @default(true)
  aplica_jueves         Boolean?                @default(true)
  aplica_viernes        Boolean?                @default(true)
  aplica_sabado         Boolean?                @default(true)
  aplica_domingo        Boolean?                @default(true)
  monto_minimo          Decimal?                @default(0.00) @db.Decimal(10, 2)
  activo                Boolean?                @default(true)
  fecha_creacion        DateTime?               @default(now()) @db.Timestamp(0)
  promociones_productos promociones_productos[]

  @@index([activo], map: "idx_promocion_activo")
  @@index([codigo], map: "idx_promocion_codigo")
  @@index([fecha_inicio, fecha_fin], map: "idx_promocion_fechas")
}

model promociones_productos {
  id           Int         @id @default(autoincrement()) @db.UnsignedInt
  promocion_id Int         @db.UnsignedInt
  producto_id  Int         @db.UnsignedInt
  categoria_id Int?        @db.UnsignedInt
  promociones  promociones @relation(fields: [promocion_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promociones_productos_ibfk_1")
  productos    productos   @relation(fields: [producto_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promociones_productos_ibfk_2")
  categorias   categorias? @relation(fields: [categoria_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promociones_productos_ibfk_3")

  @@unique([promocion_id, producto_id], map: "uk_promocion_producto")
  @@index([categoria_id], map: "categoria_id")
  @@index([producto_id], map: "idx_promo_producto")
}

model proveedores {
  id                  Int                @id @default(autoincrement()) @db.UnsignedInt
  codigo              String             @unique(map: "codigo") @db.VarChar(20)
  razon_social        String             @db.VarChar(150)
  nombre_contacto     String?            @db.VarChar(100)
  telefono            String?            @db.VarChar(20)
  email               String?            @db.VarChar(100)
  direccion           String?            @db.Text
  rfc                 String?            @db.VarChar(50)
  dias_credito        Int?               @default(0)
  limite_credito      Decimal?           @default(0.00) @db.Decimal(12, 2)
  activo              Boolean?           @default(true)
  fecha_creacion      DateTime?          @default(now()) @db.Timestamp(0)
  fecha_actualizacion DateTime?          @default(now()) @db.Timestamp(0)
  compras             compras[]
  lotes_inventario    lotes_inventario[]
  productos           productos[]

  @@index([activo], map: "idx_proveedor_activo")
  @@index([codigo], map: "idx_proveedor_codigo")
}

model roles {
  id             Int        @id @default(autoincrement()) @db.UnsignedInt
  nombre         String     @unique(map: "nombre") @db.VarChar(50)
  descripcion    String?    @db.Text
  permisos       Json?
  fecha_creacion DateTime?  @default(now()) @db.Timestamp(0)
  usuarios       usuarios[]
}

model sucursales {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  codigo                 String                   @unique(map: "codigo") @db.VarChar(10)
  nombre                 String                   @db.VarChar(100)
  direccion              String?                  @db.Text
  telefono               String?                  @db.VarChar(20)
  email                  String?                  @db.VarChar(100)
  rfc                    String?                  @db.VarChar(50)
  activo                 Boolean?                 @default(true)
  fecha_creacion         DateTime?                @default(now()) @db.Timestamp(0)
  fecha_actualizacion    DateTime?                @default(now()) @db.Timestamp(0)
  cajas_registradoras    cajas_registradoras[]
  compras                compras[]
  lotes_inventario       lotes_inventario[]
  movimientos_inventario movimientos_inventario[]
  usuarios               usuarios[]
  ventas                 ventas[]

  @@index([activo], map: "idx_sucursal_activo")
  @@index([codigo], map: "idx_sucursal_codigo")
}

model turnos_caja {
  id                  Int                  @id @default(autoincrement()) @db.UnsignedInt
  caja_id             Int                  @db.UnsignedInt
  usuario_id          Int                  @db.UnsignedInt
  monto_inicial       Decimal              @default(0.00) @db.Decimal(12, 2)
  monto_final         Decimal?             @db.Decimal(12, 2)
  ventas_efectivo     Decimal?             @default(0.00) @db.Decimal(12, 2)
  ventas_tarjeta      Decimal?             @default(0.00) @db.Decimal(12, 2)
  ventas_otros        Decimal?             @default(0.00) @db.Decimal(12, 2)
  fecha_apertura      DateTime?            @default(now()) @db.Timestamp(0)
  fecha_cierre        DateTime?            @db.Timestamp(0)
  estatus             turnos_caja_estatus? @default(abierto)
  notas_apertura      String?              @db.Text
  notas_cierre        String?              @db.Text
  cajas_registradoras cajas_registradoras  @relation(fields: [caja_id], references: [id], onUpdate: NoAction, map: "turnos_caja_ibfk_1")
  usuarios            usuarios             @relation(fields: [usuario_id], references: [id], onUpdate: NoAction, map: "turnos_caja_ibfk_2")

  @@index([caja_id], map: "idx_turno_caja")
  @@index([fecha_apertura], map: "idx_turno_fecha")
  @@index([usuario_id], map: "idx_turno_usuario")
  @@index([fecha_apertura, caja_id, estatus], map: "idx_turnos_fecha_caja")
}

model usuarios {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  sucursal_id            Int                      @db.UnsignedInt
  rol_id                 Int                      @db.UnsignedInt
  nombre_usuario         String                   @unique(map: "nombre_usuario") @db.VarChar(50)
  email                  String                   @unique(map: "email") @db.VarChar(100)
  password_hash          String                   @db.VarChar(255)
  nombre                 String                   @db.VarChar(100)
  apellidos              String                   @db.VarChar(100)
  telefono               String?                  @db.VarChar(20)
  codigo_empleado        String?                  @db.VarChar(20)
  activo                 Boolean?                 @default(true)
  ultimo_acceso          DateTime?                @db.Timestamp(0)
  fecha_creacion         DateTime?                @default(now()) @db.Timestamp(0)
  fecha_actualizacion    DateTime?                @default(now()) @db.Timestamp(0)
  compras                compras[]
  logs_acceso            logs_acceso[]
  movimientos_inventario movimientos_inventario[]
  turnos_caja            turnos_caja[]
  sucursales             sucursales               @relation(fields: [sucursal_id], references: [id], onUpdate: NoAction, map: "usuarios_ibfk_1")
  roles                  roles                    @relation(fields: [rol_id], references: [id], onUpdate: NoAction, map: "usuarios_ibfk_2")
  ventas                 ventas[]

  @@index([activo], map: "idx_usuario_activo")
  @@index([codigo_empleado], map: "idx_usuario_codigo_empleado")
  @@index([sucursal_id], map: "idx_usuario_sucursal")
  @@index([rol_id], map: "rol_id")
}

model ventas {
  id                Int              @id @default(autoincrement()) @db.UnsignedInt
  sucursal_id       Int              @db.UnsignedInt
  usuario_id        Int              @db.UnsignedInt
  numero_ticket     String           @db.VarChar(20)
  fecha_venta       DateTime?        @default(now()) @db.Timestamp(0)
  nombre_cliente    String?          @db.VarChar(100)
  rfc_cliente       String?          @db.VarChar(50)
  subtotal          Decimal          @default(0.00) @db.Decimal(12, 2)
  importe_impuestos Decimal          @default(0.00) @db.Decimal(12, 2)
  importe_descuento Decimal          @default(0.00) @db.Decimal(12, 2)
  total             Decimal          @default(0.00) @db.Decimal(12, 2)
  estatus           ventas_estatus?  @default(completada)
  notas             String?          @db.Text
  detalle_ventas    detalle_ventas[]
  pagos_ventas      pagos_ventas[]
  sucursales        sucursales       @relation(fields: [sucursal_id], references: [id], onUpdate: NoAction, map: "ventas_ibfk_1")
  usuarios          usuarios         @relation(fields: [usuario_id], references: [id], onUpdate: NoAction, map: "ventas_ibfk_2")

  @@unique([sucursal_id, numero_ticket], map: "uk_sucursal_ticket")
  @@index([estatus], map: "idx_venta_estatus")
  @@index([fecha_venta], map: "idx_venta_fecha")
  @@index([sucursal_id], map: "idx_venta_sucursal")
  @@index([fecha_venta, sucursal_id, estatus], map: "idx_ventas_fecha_sucursal")
  @@index([usuario_id], map: "usuario_id")
}

enum movimientos_inventario_tipo_movimiento {
  entrada
  salida
  ajuste
  traspaso
}

enum promociones_tipo {
  porcentaje
  monto_fijo
  compra_x_lleva_y
  x1               @map("2x1")
  x2               @map("3x2")
}

enum movimientos_inventario_tipo_referencia {
  venta
  compra
  ajuste
  traspaso
  devolucion
}

enum productos_unidad_medida {
  pieza
  kg
  litro
  metro
}

enum compras_estatus {
  pendiente
  recibida
  cancelada
}

enum turnos_caja_estatus {
  abierto
  cerrado
}

enum ventas_estatus {
  pendiente
  completada
  cancelada
  devuelta
}
